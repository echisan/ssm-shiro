<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.echisan.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.echisan.model.po.Order">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
    <result column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="buyer_user_id" jdbcType="BIGINT" property="buyerUserId" />
    <result column="seller_user_id" jdbcType="BIGINT" property="sellerUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="order_status" jdbcType="TINYINT" property="orderStatus" />
    <result column="recipients" jdbcType="VARCHAR" property="recipients" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_number, goods_id, buyer_user_id, seller_user_id, create_time, order_status, 
    recipients, address, phone, finish_time, goods_price, goods_name
  </sql>
  <select id="selectByExample" parameterType="com.echisan.model.po.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from goods_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.echisan.model.po.OrderExample">
    delete from goods_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.echisan.model.po.Order">
    insert into goods_order (id, order_number, goods_id, 
      buyer_user_id, seller_user_id, create_time, 
      order_status, recipients, address, 
      phone, finish_time, goods_price, 
      goods_name)
    values (#{id,jdbcType=BIGINT}, #{orderNumber,jdbcType=VARCHAR}, #{goodsId,jdbcType=BIGINT}, 
      #{buyerUserId,jdbcType=BIGINT}, #{sellerUserId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{orderStatus,jdbcType=TINYINT}, #{recipients,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{finishTime,jdbcType=TIMESTAMP}, #{goodsPrice,jdbcType=DECIMAL}, 
      #{goodsName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.echisan.model.po.Order">
    insert into goods_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="buyerUserId != null">
        buyer_user_id,
      </if>
      <if test="sellerUserId != null">
        seller_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="recipients != null">
        recipients,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="buyerUserId != null">
        #{buyerUserId,jdbcType=BIGINT},
      </if>
      <if test="sellerUserId != null">
        #{sellerUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="recipients != null">
        #{recipients,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.echisan.model.po.OrderExample" resultType="java.lang.Long">
    select count(*) from goods_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderNumber != null">
        order_number = #{record.orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.buyerUserId != null">
        buyer_user_id = #{record.buyerUserId,jdbcType=BIGINT},
      </if>
      <if test="record.sellerUserId != null">
        seller_user_id = #{record.sellerUserId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderStatus != null">
        order_status = #{record.orderStatus,jdbcType=TINYINT},
      </if>
      <if test="record.recipients != null">
        recipients = #{record.recipients,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.goodsPrice != null">
        goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_order
    set id = #{record.id,jdbcType=BIGINT},
      order_number = #{record.orderNumber,jdbcType=VARCHAR},
      goods_id = #{record.goodsId,jdbcType=BIGINT},
      buyer_user_id = #{record.buyerUserId,jdbcType=BIGINT},
      seller_user_id = #{record.sellerUserId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      order_status = #{record.orderStatus,jdbcType=TINYINT},
      recipients = #{record.recipients,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      goods_price = #{record.goodsPrice,jdbcType=DECIMAL},
      goods_name = #{record.goodsName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.echisan.model.po.Order">
    update goods_order
    <set>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="buyerUserId != null">
        buyer_user_id = #{buyerUserId,jdbcType=BIGINT},
      </if>
      <if test="sellerUserId != null">
        seller_user_id = #{sellerUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="recipients != null">
        recipients = #{recipients,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.echisan.model.po.Order">
    update goods_order
    set order_number = #{orderNumber,jdbcType=VARCHAR},
      goods_id = #{goodsId,jdbcType=BIGINT},
      buyer_user_id = #{buyerUserId,jdbcType=BIGINT},
      seller_user_id = #{sellerUserId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      order_status = #{orderStatus,jdbcType=TINYINT},
      recipients = #{recipients,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      goods_name = #{goodsName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>